#pragma once

#include <string>

// 64 bit unsigned int
typedef uint64_t U64;

int const NUM_PIECES = 12;
int const BOARD_WIDTH = 8;
int const NUM_SQUARES = 64;

int const FIRST_BLACK_INDEX = 6;

// initial board set up FEN string
std::string const START_FEN = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";

std::string const FEN_PIECES = "PNBRQKpnbrqk";

// piece array indexes
int const W_PAWN_INDEX = 0;
int const W_KNIGHT_INDEX = 1;
int const W_BISHOP_INDEX = 2;
int const W_ROOK_INDEX = 3;
int const W_QUEEN_INDEX = 4;
int const W_KING_INDEX = 5;
int const B_PAWN_INDEX = 6;
int const B_BISHOP_INDEX = 8;
int const B_ROOK_INDEX = 9;
int const B_QUEEN_INDEX = 10;
int const B_KING_INDEX = 11;

// for checking castling validity
U64 const W_KING_START = 16;
U64 const B_KING_START = 1152921504606846976;
U64 const W_KING_ROOK_START = 128;
U64 const W_QUEEN_ROOK_START = 1;
U64 const B_KING_ROOK_START = 9223372036854775808;
U64 const B_QUEEN_ROOK_START = 72057594037927936;
U64 const ROOK_START_ARRAY[4] = { W_KING_ROOK_START, W_QUEEN_ROOK_START, B_KING_ROOK_START, B_QUEEN_ROOK_START };
// same format as above
U64 const CASTLING_MASKS[4] = { 0x60, 0xe, 0x6000000000000000, 0xE00000000000000 };

// masks that have the whole board except the files specified
U64 const NOT_FILE_A = 0x7f7f7f7f7f7f7f7f;
U64 const NOT_FILE_H = 0xfefefefefefefefe;
U64 const NOT_FILE_AB = 0x3f3f3f3f3f3f3f3f;
U64 const NOT_FILE_GH = 0xfcfcfcfcfcfcfcfc;
U64 const NOT_FILE_ABC = 0x1f1f1f1f1f1f1f1f;
U64 const NOT_FILE_FGH = 0xf8f8f8f8f8f8f8f8;


// masks for only the files
U64 const A_FILE = 0x0101010101010101;
U64 const B_FILE = 0x0202020202020202;
U64 const C_FILE = 0x0404040404040404;
U64 const D_FILE = 0x0808080808080808;
U64 const E_FILE = 0x1010101010101010;
U64 const F_FILE = 0x2020202020202020;
U64 const G_FILE = 0x4040404040404040;
U64 const H_FILE = 0x8080808080808080;

// masks for only the ranks
U64 const RANK_1 = 0x00000000000000ff;
U64 const RANK_2 = 0x000000000000ff00;
U64 const RANK_3 = 0x0000000000ff0000;
U64 const RANK_4 = 0x00000000ff000000;
U64 const RANK_5 = 0x000000ff00000000;
U64 const RANK_6 = 0x0000ff0000000000;
U64 const RANK_7 = 0x00ff000000000000;
U64 const RANK_8 = 0xff00000000000000;

// rank masks
U64 const WHITE_PAWN_FIRST_MOVE = 0x0000000000ff0000;
U64 const BLACK_PAWN_FIRST_MOVE = 0x0000ff0000000000;


// set up mask arrays
U64 const FILE_MASKS[BOARD_WIDTH] = {
	A_FILE, B_FILE, C_FILE, D_FILE, E_FILE, F_FILE, G_FILE, H_FILE
};
U64 const RANK_MASKS[BOARD_WIDTH] = {
	RANK_1, RANK_2, RANK_3, RANK_4, RANK_5, RANK_6, RANK_7, RANK_8
};

U64 const DIAGONAL_MASKS[15] = { // top left to bottom right
	0x0000000000000001, 0x0000000000000102, 0x0000000000010204, 0x0000000001020408, 0x0000000102040810,
	0x0000010204081020, 0x0001020408102040, 0x0102040810204080, 0x0204081020408000, 0x0408102040800000,
	0x0810204080000000, 0x1020408000000000, 0x2040800000000000, 0x4080000000000000, 0x8000000000000000
};

U64 const ANTIDIAGONAL_MASKS[15] = { // top right to bottom left
	0x0000000000000080, 0x0000000000008040, 0x0000000000804020, 0x0000000080402010, 0x0000008040201008,
	0x0000804020100804, 0x0080402010080402, 0x8040201008040201, 0x4020100804020100, 0x2010080402010000,
	0x1008040201000000, 0x0804020100000000, 0x0402010000000000, 0x0201000000000000, 0x0100000000000000
};
